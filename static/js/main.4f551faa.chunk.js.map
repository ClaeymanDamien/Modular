{"version":3,"sources":["img/logo.png","Header.js","Trend.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","Navbar_default","variant","className","Brand","href","alt","src","Logo","width","height","MainTrend","_ref","data","es","smooth","autoDraw","autoDrawDuration","autoDrawEasing","gradient","radius","strokeWidth","strokeLinecap","Child","match","params","id","App","state","time","_this","loadTime","loadData","open","timeUrl","ReactDOMServer","renderToStaticMarkup","react_router_dom","react_router","path","component","test","this","heure","currentTime","split","hour","parseInt","minutes","date","Date","getHours","getMinutes","dataTime","dataHour","dataMinute","currentMinute","currentHour","_this$state","i","length","first","second","_this$state2","waitingTime","bestTime","src_Header","Zoom_default","src_Trend","index_esm","value","maxValue","text","concat","styles","buildStyles","pathColor","trailColor","textColor","Component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f551faa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0b9ffb0c.png\";","import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Logo from './img/logo.png'\r\n\r\n\r\n\r\nconst Header = () => (\r\n        <Navbar variant=\"light\" className=\"col-lg-10 offset-lg-1 p-5 pb-3 justify-content-center justify-content-lg-start d-flex align-items-center\">\r\n            <Navbar.Brand href=\"\" className=\"d-flex flex-column flex-sm-row justify-content-center align-items-center\">\r\n                <img\r\n                    alt=\"\"\r\n                    src={Logo}\r\n                    width=\"100\"\r\n                    height=\"100\"\r\n                    className=\"d-inline-block align-center mr-sm-5\"\r\n                />\r\n                <h1 className=\"display-3 text-center\">Mødular.</h1>  \r\n            </Navbar.Brand>\r\n        </Navbar>\r\n)\r\nexport default Header;","import React from 'react'\r\nimport Trend from 'react-trend'\r\nimport './Trend.css'\r\n\r\nconst MainTrend = ({data}) => (\r\n    <div className=\"bg-white padding_trend\">\r\n        <Trend\r\n            className=\"label_trend pb-1 pd-md-2 pb-lg-3\"\r\n            smooth\r\n            autoDraw\r\n            autoDrawDuration={2500}\r\n            autoDrawEasing=\"ease-out\"\r\n            data={data}\r\n            gradient={['yellow', 'orange', 'red']}\r\n            radius={5.7}\r\n            strokeWidth={0.75}\r\n            strokeLinecap={'square'}\r\n            height={70}\r\n        />\r\n    </div>\r\n    \r\n);\r\nexport default MainTrend;","import React, { Component } from 'react';\nimport ReactDOMServer from 'react-dom/server';\nimport './App.css';\nimport Header from './Header';\nimport MainTrend from './Trend';\nimport { CircularProgressbar, buildStyles, } from 'react-circular-progressbar';\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport 'react-circular-progressbar/dist/styles.css'; \nimport Zoom from 'react-reveal/Zoom';\n\n  function test(){\n    return(\n    <Router>\n        <Route path=\"/:id\" component={Child} />\n    </Router>\n    )\n  }\n\n  function Child({ match }) {\n    return match.params.id\n  }\n\n  class App extends Component {\n\n    state = {\n      time: this.loadTime(),  \n      data: this.loadData(),\n      open: this.open(),\n    }\n    \n    loadData(){\n      //28 valeurs toutes les 5 minutes\n      var data = [\n        [\"11h45\",\"11h50\",\"11h55\",\"12h00\",\"12h05\",\"12h10\",\"12h15\",\"12h20\",\"12h25\",\"12h30\",\"12h35\",\"12h40\",\"12h45\",\"12h50\",\"12h55\",\n        \"13h00\",\"13h05\",\"13h10\",\"13h15\",\"13h20\",\"13h25\",\"13h30\",\"13h35\",\"13h40\",\"13h45\",\"13h50\",\"13h55\",\"14h00\"],\n        [9,13,15,16,16,15,13,11,9,7,5,3,2,1,0,0,0,0,0,0,0,1,2,3,4,5,6,9]\n      ]\n      return data;\n    }\n\n    loadTime(){\n      \n      let regex = /^(10|11|12|13|14|15|16|17|18|19|20|21|22|23|[1-9])h[0-5][0-9]$/\n      var timeUrl = ReactDOMServer.renderToStaticMarkup(test())\n\n      if(regex.test(timeUrl)){\n        return timeUrl;\n      }\n      else{\n        return this.heure()\n      }\n    }\n\n    open(){\n      \n      var currentTime = this.loadTime().split('h')\n\n      var hour = parseInt(currentTime[0], 10)\n      var minutes = parseInt(currentTime[1], 10)\n\n      if(hour >= 11 && hour < 14){\n        if(hour === 11 && minutes < 45 ){\n          return false\n        }\n        return true\n      }\n      return false\n      \n    }\n    \n    heure(){\n     var date = new Date();\n     var heure = date.getHours();\n     var minutes = date.getMinutes();\n    \n     if(minutes < 10)\n          minutes = \"0\" + minutes;\n\n     var time = heure + \"h\" + minutes;\n     \n     return time;\n    }\n\n    waitingTime(){\n      const{time, data} = this.state\n      var dataTime;\n      var dataHour;\n      var dataMinute;\n      var currentTime = time.split(\"h\");\n      var currentMinute;\n      var currentHour;\n\n      currentHour = parseInt(currentTime[0],10);\n      currentMinute = parseInt(currentTime[1],10);\n\n      for(var i = 0; i<data[0].length; i++){\n        dataTime = data[0][i].split(\"h\");\n        dataHour = parseInt(dataTime[0], 10);\n        dataMinute = parseInt(dataTime[1], 10);\n        \n        if(currentHour === dataHour){\n          if(currentMinute >= dataMinute && currentMinute<dataMinute+5)\n            return data[1][i];\n        }\n      }\n      return false;\n    }\n\n    bestTime(){\n      //On cherche un temps avec max 5 minutes d'attentes\n      const{data} = this.state\n      var first\n      var second\n      //Jusqu'à 12h45\n      for(var i=0; i < 13; i++){\n        if(data[1][i] <= 5){\n          first = data[0][i]\n          break\n        }\n      } \n      //12h45 à la fin\n      for(var i=13; i<data[1].length; i++){\n        if(data[1][i] > 5){\n          second = data[0][i-1]\n          break\n        }\n      }   \n\n      return [first, second]\n    }\n  \n  render(){  \n    const {data,open} = this.state\n    var waitingTime = this.waitingTime()\n    var bestTime = this.bestTime()\n\n    \n\n    return (\n      <div className=\"crous bg-light pb-5 bg_plate\">\n        <Header />\n        <Zoom>\n          <div className=\"mt-2 mt-md-2 pb-5 pt-0 pt-md-5 col-lg-10 col-12 offset-lg-1\">\n            <div className=\"col-12 bg-white p-0 pb-4 pb-0\">\n              <div className=\"p-1\">\n                <h2 className=\"text-center display-4\">Temps d'attente aujourd'hui</h2>\n              </div>\n              <MainTrend data = {data[1]}/>\n            </div>\n          </div>\n        </Zoom>\n\n        <div className=\"col-lg-10 col-12 offset-lg-1 d-flex justify-content-between mt-5 flex-column flex-md-row\">\n          <Zoom>\n            <div className=\"col-lg bg-white p-2 p-md-3 p-lg-5 m-0 d-flex flex-column justify-content-center align-items-center\">\n              <div className=\"pt-5 pt-lg-0\">\n                <h2 className=\"display-4 text-center\">Temps d'attente actuel</h2>\n              </div>\n              <div className=\"col-10 p-2 p-md-3 p-lg-4\">\n                {open ? \n                <CircularProgressbar\n                            value={waitingTime}\n                            className=\"display-4\"\n                            maxValue={30}\n                            text={`${waitingTime}min`} \n                            strokeWidth={3}\n                            styles={buildStyles({\n                              pathColor: 'red',\n                              trailColor: '#eee',\n                              textColor :  'red',\n                            })}       \n                />\n                :\n                <CircularProgressbar\n                            value={30}\n                            className=\"display-4\"\n                            maxValue={30}\n                            text={`Fermé`} \n                            strokeWidth={3}\n                            styles={buildStyles({\n                              pathColor: 'red',\n                              trailColor: '#eee',\n                              textColor :  'red',\n                            })}       \n                />\n              }\n              </div>\n            </div>\n          </Zoom>\n          \n          <div className=\"col-1 mb-5\">\n          </div>\n          \n          <Zoom>\n            <div className=\"col-lg bg-white p-lg-5 p-3 m-0 d-flex flex-column justify-content-center align-items-center\">\n              <div className=\"pt-5 pt-lg-0\">\n                <h2 className=\"display-4 text-center\">Heure conseillé</h2>\n              </div>\n              <div className=\"col-10 p-lg-4 d-flex flex-column justify-content-center text-center align-items-center\">\n                  <div className=\"pb-4 pt-4\">\n                    <span className=\"display-2 d-none d-lg-inline\">{bestTime[0]}</span>\n                    <span className=\"display-4 d-lg-none\">{bestTime[0]}</span>\n                  </div>\n                  <div className=\"pb-4 pt-4\">\n                    <span className=\"display-2 d-none d-lg-inline\">à</span>\n                    <span className=\"display-4 d-lg-none\">à</span>\n                  </div>\n                  <div className=\"pb-4 pt-4\">\n                    <span className=\"display-2 d-none d-lg-inline\">{bestTime[1]}</span>\n                    <span className=\"display-4 d-lg-none\">{bestTime[1]}</span>\n                  </div>\n              </div>\n            </div>\n            </Zoom>\n          </div>\n        <div className=\"big_pb\"></div>\n      </div>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}